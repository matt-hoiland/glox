// Code generated by tools/generate-ast. DO NOT EDIT.
package ast

import (
	"github.com/matt-hoiland/glox/internal/loxtype"
	"github.com/matt-hoiland/glox/internal/token"
)

type Stmt interface {
	Accept(StmtVisitor) (loxtype.Type, error)
}

type StmtVisitor interface {
	VisitBlockStmt(*BlockStmt) (loxtype.Type, error)
	VisitExpressionStmt(*ExpressionStmt) (loxtype.Type, error)
	VisitPrintStmt(*PrintStmt) (loxtype.Type, error)
	VisitVarStmt(*VarStmt) (loxtype.Type, error)
}

type BlockStmt struct {
	Statements []Stmt
}

var _ Stmt = (*BlockStmt)(nil)

func NewBlockStmt(Statements []Stmt) *BlockStmt {
	return &BlockStmt{
		Statements: Statements,
	}
}

func (e *BlockStmt) Accept(visitor StmtVisitor) (loxtype.Type, error) {
	return visitor.VisitBlockStmt(e)
}

type ExpressionStmt struct {
	Expression Expr
}

var _ Stmt = (*ExpressionStmt)(nil)

func NewExpressionStmt(Expression Expr) *ExpressionStmt {
	return &ExpressionStmt{
		Expression: Expression,
	}
}

func (e *ExpressionStmt) Accept(visitor StmtVisitor) (loxtype.Type, error) {
	return visitor.VisitExpressionStmt(e)
}

type PrintStmt struct {
	Expression Expr
}

var _ Stmt = (*PrintStmt)(nil)

func NewPrintStmt(Expression Expr) *PrintStmt {
	return &PrintStmt{
		Expression: Expression,
	}
}

func (e *PrintStmt) Accept(visitor StmtVisitor) (loxtype.Type, error) {
	return visitor.VisitPrintStmt(e)
}

type VarStmt struct {
	Name        *token.Token
	Initializer Expr
}

var _ Stmt = (*VarStmt)(nil)

func NewVarStmt(Name *token.Token, Initializer Expr) *VarStmt {
	return &VarStmt{
		Name:        Name,
		Initializer: Initializer,
	}
}

func (e *VarStmt) Accept(visitor StmtVisitor) (loxtype.Type, error) {
	return visitor.VisitVarStmt(e)
}
