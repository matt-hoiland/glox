// Code generated by tools/generate-ast. DO NOT EDIT.
package ast

import (
	"github.com/matt-hoiland/glox/internal/loxtype"
)

type Stmt interface {
	Accept(StmtVisitor) (loxtype.Type, error)
}

type StmtVisitor interface {
	VisitExpressionStmt(*ExpressionStmt) (loxtype.Type, error)
	VisitPrintStmt(*PrintStmt) (loxtype.Type, error)
}

type ExpressionStmt struct {
	Expression Expr
}

var _ Stmt = (*ExpressionStmt)(nil)

func NewExpressionStmt(Expression Expr) *ExpressionStmt {
	return &ExpressionStmt{
		Expression: Expression,
	}
}

func (e *ExpressionStmt) Accept(visitor StmtVisitor) (loxtype.Type, error) {
	return visitor.VisitExpressionStmt(e)
}

type PrintStmt struct {
	Expression Expr
}

var _ Stmt = (*PrintStmt)(nil)

func NewPrintStmt(Expression Expr) *PrintStmt {
	return &PrintStmt{
		Expression: Expression,
	}
}

func (e *PrintStmt) Accept(visitor StmtVisitor) (loxtype.Type, error) {
	return visitor.VisitPrintStmt(e)
}
